How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using the FC command made it clear very quickly where the mistake was in both the simple .js file and in the more complex game.js files. Instead of having to pour over lines and lines of code, you can see exactly where you made changes and fix them promptly!

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    The first thing I thought of was the ability to compare the old vs new and then copy/paste the areas where errors have crept in or copy/paste sections of functionality that you might need to reintroduce to your project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Commit Pros: you control everything, your commits are logical in when they are made, commits clearly define code modifications.
    Commit Cons: you could forget to commit and lose work, you may commit too often or not often enough.
    Google Pros: your work is saved automatically so even if you forget, you wont lose work if you experience a crash.
    Google Cons: auto-save will not group your changes in a nice, logical way.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I think Git handles all three files at once because it's what most coders would want.  To be able to see all the changes across a single repository is much more useful than having to go into each file separately and figure out what has changed in each.

How can you use the commands git log and git diff to view the history of files?

    git log shows all the commits that have been made while get diff will allow you to compare specific commits to find differences.

How might using version control make you more confident to make changes that
could break something?

    With version control you can easily restore a prior working version even if you have saved a newer version that resulted in breaking something. Makes getting back to a working version SO much easier and results in less wasted time recoding something.

Now that you have your workspace set up, what do you want to try using Git for?

    I feel like I still need to learn more about Git, however, I'd like to use it in my next coding project and learn more about version control.